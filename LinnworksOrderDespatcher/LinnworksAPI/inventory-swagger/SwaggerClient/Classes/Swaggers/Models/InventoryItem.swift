//
// InventoryItem.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct InventoryItem: Codable {

    /** Item title */
    public var title: String?
    /** Item SKU (Item number) */
    public var SKU: String?
    /** Barcode Number */
    public var barcode: String?
    /** Default item purchase price */
    public var purchasePrice: Double?
    /** Default item retail price */
    public var retailPrice: Double?
    /** Default item tax rate. Set to -1 to use country tax rate */
    public var taxRate: Float?
    /** Default category id. Set to empty guid to use default category */
    public var categoryId: UUID?
    /** Item height */
    public var height: Double?
    /** Item width */
    public var width: Double?
    /** Item depth */
    public var depth: Double?
    /** Item weight */
    public var weight: Double?
    /** Stock item tracking type. 0 &#x3D; none. 1 &#x3D; Ordered by Sell by Date. 2 &#x3D; Ordered by Priority Sequence */
    public var trackingType: Int?
    /** User must scan batch number when procesing orders */
    public var batchNumberScanRequired: Bool?
    /** User must scan item serial number when procesing orders */
    public var serialNumberScanRequired: Bool?
    public var _id: UUID?
    /** Default category name */
    public var category: String?
    /** True if the stock item is tracked by batch */
    public var isBatchedStockType: Bool?
    /** Whether this item has variation sub items */
    public var isVariationParent: Bool?
    public var creationDate: Date?

    public init(title: String? = nil, SKU: String? = nil, barcode: String? = nil, purchasePrice: Double? = nil, retailPrice: Double? = nil, taxRate: Float? = nil, categoryId: UUID? = nil, height: Double? = nil, width: Double? = nil, depth: Double? = nil, weight: Double? = nil, trackingType: Int? = nil, batchNumberScanRequired: Bool? = nil, serialNumberScanRequired: Bool? = nil, _id: UUID? = nil, category: String? = nil, isBatchedStockType: Bool? = nil, isVariationParent: Bool? = nil, creationDate: Date? = nil) {
        self.title = title
        self.SKU = SKU
        self.barcode = barcode
        self.purchasePrice = purchasePrice
        self.retailPrice = retailPrice
        self.taxRate = taxRate
        self.categoryId = categoryId
        self.height = height
        self.width = width
        self.depth = depth
        self.weight = weight
        self.trackingType = trackingType
        self.batchNumberScanRequired = batchNumberScanRequired
        self.serialNumberScanRequired = serialNumberScanRequired
        self._id = _id
        self.category = category
        self.isBatchedStockType = isBatchedStockType
        self.isVariationParent = isVariationParent
        self.creationDate = creationDate
    }

    public enum CodingKeys: String, CodingKey { 
        case title = "Title"
        case SKU
        case barcode = "Barcode"
        case purchasePrice = "PurchasePrice"
        case retailPrice = "RetailPrice"
        case taxRate = "TaxRate"
        case categoryId = "CategoryId"
        case height = "Height"
        case width = "Width"
        case depth = "Depth"
        case weight = "Weight"
        case trackingType = "TrackingType"
        case batchNumberScanRequired = "BatchNumberScanRequired"
        case serialNumberScanRequired = "SerialNumberScanRequired"
        case _id = "Id"
        case category = "Category"
        case isBatchedStockType = "IsBatchedStockType"
        case isVariationParent = "IsVariationParent"
        case creationDate = "CreationDate"
    }

}
